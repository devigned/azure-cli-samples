#!/usr/bin/env bash
set -e

DEFAULT_TAG='restart-tag'
LOCATION='westus'
TAG=${1:-$DEFAULT_TAG}

RESOURCE_GROUPS=('GROUP1' 'GROUP2' 'GROUP3')

# Read in the public key
if [[ -r ~/.ssh/id_rsa.pub ]]; then
    SSH_PUB_KEY=$(cat ~/.ssh/id_rsa.pub)
else
    read -e -p "I couldn't find ~/.ssh/id_rsa.pub. Please provide a path to your public key: " FILE_PATH
    eval FILE_PATH=${FILE_PATH}
    while [ ! -e ${FILE_PATH} ]; do
        read -e -p "I couldn't find $FILE_PATH. Please provide a path to your public key: " FILE_PATH
    done
    SSH_PUB_KEY=`cat ${FILE_PATH}`
fi

for group in ${RESOURCE_GROUPS[@]}; do
    # Create the resource group if it doesn't exist
    if [[ $(az group exists -n ${group}) == 'false' ]]; then
        echo "Creating resource group ${group} in ${LOCATION}"
        az group create -n ${group} -l ${LOCATION} 1>/dev/null
    else
        echo "Resource Group ${group} already exists"
    fi

    echo "Deploying vm named ${group}-vm in ${group} with no waiting"
    az vm create -g ${group} -n "${group}-vm" --image UbuntuLTS --admin-username deploy --tags ${DEFAULT_TAG} --no-wait $1>/dev/null
done

echo "Waiting for the vms to complete provisioning"

GROUP_QUERY=''
for group in ${RESOURCE_GROUPS[@]}; do
    if [[ ${GROUP_QUERY} ]]; then
        GROUP_QUERY="${GROUP_QUERY} || resourceGroup=='${group}'"
    else
        GROUP_QUERY="[?resourceGroup=='${group}'"
    fi
done

SUCCESS_GROUP_QUERY="length(${GROUP_QUERY}] | [?provisioningState=='Succeeded'])"
FAILED_GROUP_QUERY="length(${GROUP_QUERY}] | [?provisioningState=='Failed'])"

echo ""
while [[ $(az vm list --query "${SUCCESS_GROUP_QUERY}") != ${#RESOURCE_GROUPS[@]} ]]; do
    echo "Still not provisioned. Sleeping for 20 seconds."
    sleep 20
    if [[ $(az vm list --query "${FAILED_GROUP_QUERY}") != 0 ]]; then
        echo "At least one of the vms failed to provision successfully!!"
        exit 1
    fi
done

echo ""
echo "Restarting virtual machines with ids via the group query"
az vm restart --ids $(az vm list --query "join(' ', ${GROUP_QUERY}] | [].id)" -o tsv) $1>/dev/null

echo ""
echo "Restarting virtual machines with a given tag"
az vm restart --ids $(az resource list --tag ${TAG} --query "[?type=='Microsoft.Compute/virtualMachines'].id" -o tsv) $1>/dev/null


echo ""
echo "To delete the created resource groups run the following."
DELETE_CMD=''
for group in ${RESOURCE_GROUPS[@]}; do
    if [[ ${DELETE_CMD} ]]; then
        DELETE_CMD="${DELETE_CMD} && az group delete -n ${group} --no-wait --force"
    else
        DELETE_CMD="az group delete -n ${group} --no-wait --force"
    fi
done

echo "'${DELETE_CMD}'"